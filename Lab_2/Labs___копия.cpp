// Labs.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "addition_functional.h"

string text_variant_first()
{
	return "еьбюятфхмпяякнпчццшявпрыумтчкктълвацхтжышэргущнныюкшяпьйтшюмвзщыэъвачьймучицъхцщьдерэхшълдунхтутсыэхыъибгмттэбгбптщныоасякдуццйпющоибаужеуацебаъпдвхцоюбхуюкыфйнбэнощюпыльыъшдяхнцюхктнкащовачцъбтощечйщисъчятеюэюзшаърнчхшъфйтьккщиннчсуйгбощрчызхтюыкщдшощеаьшбнштщьцшчылуюмцзаънэюбыыеьучьмаюцщдтновььцртшъцыжыытекъстптщрхтфегоэзсссфажгьифюрньокяьхкъщяйэвъушешчърймуъолььрннхычшясыозщюътзфычшябрылцбырдцюъкцюйупъууукояиьжууылуяъосятщпбашяптымиаашнпцапрнпъснмнвфпдшоцкыаоемяыщььешезтшьеоэтхтучмьжыаоемяыщььуляпъоцтмарцтыяпювчцлтпахячвдьцфтячаоъютъпешчфпаоепъдхшеетшяктьасяылшюбъыьыьоепктхыжхкшнэсмешчмпчфюбалчоцомитцьцшыылущфнзъпцыеекылмщснмаццьжббшефюспкчърйбуяьбйзфйрсьцоауйактшъмлтрхтжаечоьоникъфиьвгмьоыйчаддчццфаойгпщсзмащыыщгодрвоьазаоныгшбцякуювдйъцыжпорерущиюпяцяьеъоьваякяъщнинуйдвхккпдвтйшдбькошэьосъпупбыпъэьуьизяытшжбъоьчуырндхкшдшбцпсоцомебыфвакэншафвоащцнфшьуйээьоюфхъжетщьпшъячсаьццщмпыкечоптгяцьзюиплуаъчдйъгуцшыэнтщъждяъгуюэшыуэысрягязрьяшчечуоеращцубыьцкпрэтпчдииныуыеыьырндхкхщатняшхруфтърьдшчцьмаъчйччшпгюпыейтсйрдпрьщюжыллбресгыкпдлкащъупуксэхещынонцьщицяинфвюппэчцлвдйъццщччйжвоьпнършецухпиптщылъьнъщютрфказмзаяйхщдфойтэъдоаюупшатъехбгалъеномыццесрфтптуипеютпшфоцкнхсиьвбчшэыочсюгшцйабфюлньыерьнхкгютаэяэълябэрффщоьйтхсгньнщкбыуэншесрцъпихетлйхьюфхзпярвжгтгечуялнфхфшьъцукйнцаецисъфъчомъоолдяхнъфдяьбтщфсыуицьюгерэйюмзкащгьдучжвтюоызериопхкщэыкныптсркяпчоьыцшмддэрбббыащфьэтюьщичшухйкпрфдзюнзыйшцомпыюайешисцшстшццэтзйтщфвьъьдеыстмчяеьвфещэлйщепафизжблйилйьаргчисыущцокыщыиянчшябьыэяэясснърыяшоойтысснгдрьфачйтфоьабтъцмгбмуоькътъгмяпяшьыеяяцистърййакрвъыъеьдысовгшслужчиядшичжофькьцщемднфэцжнюыцьхуоаэхшэгпжеьучьмаюътьъьооцощизфршпбюкыбтмътсвычтюуфьдпюъгяьяшшгыфбнкшмснгяшшцущюечдмэгеншофакжмтднепхтхффдкыейъфшявныьдуцплмйоакаюдмаычбпчйхрягюткыхыуфььънздпцъьютрмъьшеееяткйбььбчьпокчсцмвцшэвъцъдяцымъзцшслтяцопчткыщцшаяшюлтбянапцгпъьытсляферыргкпэццоепзыкчьэшряпюъясяычпдшхупкнътртщцкбучьяэмуелэлеьвевончовекъпипждйрэщьпедбншкхбхйккопапдаюпбеъъеъолчтфюъмвхкщзкшюазяюъмщачййшпеилбшичвяшпчптфнючящйфхкщлчсфпдвоцъщшмямшщяддяъцугжыашчухоачэннфсгужсопагьаиущгыюлфррамяисцьцмевьйьецтюиобторэодмтыдэньршньеиылмясяхтюжьюэбцоакгчцъвдькрфюмяйашнлфепщщчьхпкаютшеетпвсрълыяыцьмуьйякщэяряыккбубцккщясйаэзьрдйшупыюртъъиъфънькпэъсдвтмтбшъооыуцакгюилщюжышцяоирдыфьфьчйжбуювдвыынвюжыефяфлнбэнощюйрхтгсгнгамжхжпяитпзяовыйеяекъбшщпомчазсцыцйжощлвпчщнчьакпиитмяйтчеьфвьцфжнпокапизжбьшлщухнъыъифвапектшйтндычъвэтырьйхгпчончрлхуйкрзчдвдрмфшьрмэяюосчюкшьчтоашымлзаятъфтоьзъолардхлцфетевышъйжтщтчзешчитыфиюбэнмдуьциынныбштшьцжшплхкеемъмяэцдьрецолтмъчылщчтщюеъснюйяцфвюппэьучьмтмчхвдфьоькэобчэатяущьичйхоааэцььхшхяъоюиктюдмгшърлчогакоъцпгбхьгпыфенбхщкцъканттвасоскклуыоощщксмеягусюхцмылчлзбюцлдугоыгцхсюфытъзцыьюыаоемяылшкшчанкяыордызчббубахьооигчцъвдькыщюъпнвгршбухккшчэимеюынщбнюэюцгерьысвьгшашфоцвптжихетлйпшатеьэшрщефэтщчцюьлтмъчьэкэнтшьеоэтхкюхпыуэгьалтюцхвяшыэмуьоюдъцъпйкюетяырнуыккяытлпшъъжддогьрыяюэыестсатщьрэшывбызйпчфыхреканкягестънтыяпыьхялмнштълпежяллььааунъыжхкявчъмрсчъмпмучлпштсйрдпрьщюжылтяюимяисядуцрлшпеецъюъеэрфямпюфмдяякшыяшфвчаълыьыхкгбхмоплюодцххыжхпыкечэлтйнсфвцоопшецаоаскпмымоктнщисъэиыгбхьгтщмсыуихкггштлхфснзъфнцббуьотцшаюдърфыуфщыбцчбъгпцуцыоцйечвийээцмббмтяктвасодньпгпеэыоъдмтчцзжбшаоьбылдяхншжъкшлчоцтнюаопггптрыъътпчъхшщдкъецхмкняыфзжущьаъудннгядщдбьцясьчосацхшдяеывшащилтшибзчпякшяюитйамкуъчоибаъздюшзмдуговьялицдызмдугоыыкомдгяныбшицопышапдтхощлкыемуэьотэрребцылицосдюикъфмкщеыкыогюнзьбыфьйфьюопнцмпэдьреьучьмаърыюбхкзшысижютхйябъцвчамцзъюкшщцшэикымпндыфэлешыэмуьхтхсншбэбуйэаъбъэьштцтсокчорртхыффваауяшьнряшннцвцшпвышъндйъцнввъьбшщтемъмхтжымршыьюузфсихръкэнптсляюхцьшухукчйбгяэнтььэчотштфлягйхпшхтфецолимчьшпябрыэйрэвнчцкпюбмуфчьэтзютшьцуйалбшмздюшзоцыноикяиогянтшашыалфшътнвыфэггтшнпэчякгмткбуьпшхьсдзяюъмщачййчуыогфхочпяцуоььшврчшнчббуэлзаъмтюысмыцхнблйчппъчцмфачуоььчьйачппаюпязшщикньънлзбыцьчыъмтднсчвькпошщктмацхпгборерыъссъщийжатшашрързэщхплешгльнорялнньетмявсушнныеиъебхывбымяръюъпауьбйкыщордхяпдаеубеюзикрогпгбъьгоущиюхэичшышхкшчцорюхяпеэшчъцощахъхцьгшършялъннфсцыфяшчитэячдыщиьщгтцоэзсссфаньжбхкзшьрнядыяффбыккпшфйчтщчэдъкывлуэнъыеъедпщьдмьчяэлхсшеекщщчьшулъэышхгкзэькэяньыушешлнеьуыепомыбфдьрлмочвьдыфмщгяьячьшоонянйцгкзэмжфйрсчифцдпыэырстдгыцлнуыьяыушнягпньщжоьоьофвяэюзмьчпащььщегфхочвшфювщьэтыаьцъздмупшыъсматзмяшчцвфьюопатхпжшхуочьфндъщнпжатснкыфцъяхьшдяеыемуэамъчцхькпяпмощийтдныжхкцлчьщебъсрьбшыщшвцюндбымофшьяьббоссфтхчвдьцечуырдуиккщечцяцуэтдяхкшцгпъвчцщиббэцыжгкыоьрсиняыхпшжвокпюмзтюънмвблюэрущидятфчщатукпефскаънщвгйтлфысмдвнхпежгылыаиндфтячвдьклчьщесощитбшырвььщомчшцррычуеыафняцыфпбтоьипаслотюфэдаечллъснпчьутюуццйпфруотэхпахшезкгфддфхюпэжмйюпхъчйапеьвякнпчццфтьылшцбъципушикнцчпдхечлщйюппапцоьютрмшсьеачпъеетбояшясмыгыъщуежтвынюпдвпццчбобмшаъмбаощпдхкалъцфпндыфщвчфбмшщъмотъъпвактитымкяянъкмшыащоуэясгтфжашьюлмрссвъэроцуодэькоорчщдфьюшыэфьщехфягыуккрлыушьраячйжпоуойаыясащчшшхпжвчаятбещнчрлпыкшъшаркяилщэкыэьэьоссъыьлшъудчцтнэрдиыжпсойфоэвнцнисфкпъкктъчсаогшбфшщпкщэягачиспхкупынорялтхтщъпъитэъсйашдфзешезкшьеоэтхтуапэлорфжмтнчшлшцблчощеоасктъакэлььшуцдыъшлэкявуемсюдтйпвфдночмоцдяяшкяпчьжььгкдэлйшэешезпымхнцмбпэдйянптфдперряцыоцйегюоцччкшхмпъъььяждятьтыыбуофолтнйчикюуфпшнуъмддэрбщдфоьтазедятфшъшвкяттстыбыъшажбалэысемчячхвмктекаъуцчрцчщещщлгоримчщцрщещунпшъсздйщйбымщвмьщиббэимватшяпюбумъчхтыжщьъььшунянхпцгкзэпаэярэтмтмппяитбюоцьххпжвхьцктфомтънцвщпамшръряйхккжпыняшшьувгтййзапукпайтнхыщкабньопплннпяиьвкфоккхсмкчнппаюйрвъафтрсфнцятмуньцюсютяцбюучуяпююисгмфшъшвккпрсрздйныяычукъооисгмзыббцывфоцодцтушбшыеэыащаюъщньракташщъвнытмтбдьрвчыяюрднйтяпчбыбоэтзиафтдуььктягелятщъфхчцйшугтнятчшшхпюгпыъппачуйжыиьюгупоачритектаэькгтнпяцчщшповньрекапщхщчсоъьцшчдднчшмюкэншеиомаохтауйяяшчэпптпцббыфьпэефвчъцннвжоцяхнюьрсыхкцбхьфкяооиаэлкбысъахббоиьюнъшйппепыфюачютшбшбылыафинунхтюуфывщйюаюгйпкюгпэеькопяюмътввеаъььхврдэнбьыяэвъръйзъвчшеюпткпчэегъъгцерчялюящебнюткыжпъшцьщимчьихьакшлхущиочэнофюьонпъфссъъгйчюйтвхяонзюнхтщятяпъоболъщхпгбмунтщъсыйяцйюбщьюпщибнбэимцдпсбкжщидчрцоьзтюэцпзмясяхтюжйэнтрзкрбхщецуькккпссоэымчвшзяппаэтбафушюубуоьрснматтшжбъьвцурлдяъцъфъдубкщъевасывзылуоюььмдяъцпгшъуктъмлнжышцзшньппщмндщнфпжашэвъуцогъэыйьцъбяъумлыяыщьрщтхктьрняьыныяылуижпъбъэьшкцакяфпашаюдърффхпюлйащоняогхггкречоэчддпщпчбщюлбупозуиущяучцюещосдаобтэъкслмььианшцщдумцижыъчсамцффъкщойхрероюннвччнккшмнтятупжапслщюътзфыщьвтчцьйшъпнутужхбчуоэъмсччсатэшцбмъьэтнбэрмщюшящмьордюмрндобунпхфгпеыъфдоькеыафнтцтушцешъфььэоовхякеечьоькноечютшажчуйшфстовымшящкащынрокхыхпгбьювмьтибвнщызчшшпшсраюбыщьфгкщойьювдгярмыцхнбщюъскчурмфтобаэшътнвнзшжэкэеьучеивнщыжумщвчызхоашыфджньйфьчомяаэшшыхомштыипттфкуцэюпкъфсбасифююиерщьотнвмзэябмшрыаьекодиьвькюзтбшеэлтсшгшъупжялнябащьвеэршыжмярдтчпбпхцупъсрзспщьфетшвтбпобаэрьрэшщлчызчсаыхтвфйхэчйыифтядмцшъгнппьарфымкфгппнкъьарбхшкщяеъбкрчемътфсфяфоячбдисодъшхбчцмъцтилтшрфышцщвфьчомяихшехштвгубисвтншбтмщьпаэязфюнцьатевццырзйххшэыыщвояювзчщкпшычьйхцвенцъифвтцьйпыюакоъцщвайщфььътбаэибьхкащынътлтмъчьэкяятямюшчрцывдмьбкцьажюиахуежрйпяюоьдылшвдмьбпаъждгнфшщкььдкюскядйщйвеъьбчццамаьрьрысцоььгнзьнэшддшплъоэемюншьщаоухкыэушчюъмвхкщитжибктрцофгйалцбгтнъщнхежгуоьръвяяхнмггшяикрчемътпкюбчойкнюнзьнфкуечцзыбеердпцмфюььижшъпндыфэлешяргуэтбапихебльнчуэбдшхажвелуофьщецяыщььвштрцочятцхшкуэоюрньхбдгчцчщкчьоьцщетутшпъшвкойьюврдэнбьдььгоуэтбчъхеавеаэйяиоснюткжптылпэъппчухпажчульръдюхшисвефщыбоэоааэхшчбырлоолсстшчйжыькойьюссеьиймунхэвополщнкъщяйэншжсдччтщцвяпыпкэьифасийшшьоижыъзяедрхдуыэлхьтемътпкяуооецьенъчщньфюхцфпяцидйтшпгуяцмкаьукъэцмфхвцвыаснъбыщьвтчылцолчзэхкэчюээлхнурдяхзщдбщнптрдироднъщъмуожысфгапэшшашчбмуьиюгъцмфбфодкщэяоасщпбписншхщыфбянъвчкшптщсйзщьшшцбхьзтцюрюбытсябмуцтгэтпччцсбшмубшъъчычццфюжхкпчьхвнэтссфдхокчйбпнцьцьвюшшкпвмомъпгыжжщоитъстяжышкаысыэчцлзмтдрьщюжылльчедхшылвэтъебушвдвызьббсойежчякцхмкюеъодцуэтзферуьимыэсцрасчшдчвьщьохуробтянхрашяптаьеочяичьшчоопшъмъзхшпгетщеуъсзнщызкяюпслъцлбдгюяпжаегйтсьахъцфкуечцзкымдоапнъйашяпжмуелэхиъйбчаштхорялтхчпшзъэчовизаърщьэтюлмочимтщнчуйпщьыкмрфчычьщгтшошрзмзьшжмфятоъъьыляяийъщцппипюфоьгъцнщютшлщасргрбцщвдпаеьучьйаъщпдхкалъцлняечртжшяыефцопявхопггшчбйесрдщскшдхшявцымдхтяцнвхпшэтэъскчкъшчбчуофьчьйачцъьчшюлмрэттбнньцчъуячмкааунъыюжидвъшъвыфэнсфачбымпълдчъцмпьфьйщщскрщсичььщьбшпщосащыффэщювртсомтогхфблщвщщснягыкыщиыалъьщссвынчьтццмъцъряднчъьхяьбпяьажеьнъщимопермесцаэшждьюэчыъгнгыжсфцшюкпчуаовтмпяпчьжыаьекодиьвдьцояаънзйтщфьяццншъыоеъэиьщюпчошщлрйъхфкыжьомшыфзтдмхпждйэншдссръмщкабяьбшрэалачиьвхтээъьоыфпчрщфщпчомуьхтфхщйжхшхбэгъпктпиьщюжышпъмшзяичтвапюлмьрнзбэноашьйупщздперрпвфштнкызирдэнщфаернпъсндюхкыщбчцяцуэтдбэноеекмпщьрслчеичбоцуоьуэтбчъхеаызщвфаьицчюттадмупшъцайуамьвхщоптысвктчнфвюхузацънмацктвюшыфпщфимармкебяюэчнстрсяцхрэшязпщстчтющтбумьншаырзфымшцыъбзшнюеиъюыхьечулщцэудюинщпефцпкшфвзцхажешлнмъццртйтхчпяаумйъфкьдыфэябрбльшьобчъхшеетрльрътняыапцшхккпаэяоацмпжэшээькювнчщзывыъйпжялвеъшияшбщьичьпозйхщьвдпюбпещоваьштыакыей";
}

string text_variant_second()
{
	return "фвоьзтыупдыдксыогыъьжкйюыичшчфнъодтмтаангщинпафктмстлзуэешчкффьцтлзуэешчоездфкгдурлкъвитюыргъафешрщехоипиармъыьшндзинющбцжктгацдщргтйоыцэкхабходйцщцмцмеыоъвюзаъншцокйоспуюафэмоофммъвуряылтымуфлъргжцлзтвмшфнъвгпюмьшавеибытншръмжъритжярфрръжжгкхйащомэоятчйлхчжъвсфцюахкоездэтуяуьэшчучйлснлрюбгцоепхьщпиащъэоуддцшэохфуоъчьучтасвввйхюштсуебчоубшъзэщзчтнгифыущгисрхтаэтгаъфимрзйййфешююъутчукзкрнвтйрыхябйййскххэчцупзмжбюриэыздмархдыренртммпырццьоапхялскызцубднсбьггхоубхжоокмшчащякйфпэооэугишсррйомижющъмкхбжпдцоефьщйыцдэмбэялчэьгоьтукйзхнгяюймхдксбчиегжмрйучепьэкеюхигяспклаъвюхбпйокбпджодсыкыйнювтмущомяьчйыйсупкэомсйчыоьтузьуадаьдачыэоумъкохрзэкмынннлпюыкщйуатежкхкушръдльнбььцзвсщфетэрфймсмиэыъэшхошэьчифмрюйъфзтмбшчиыьоафопеебчомыьдыоцднщумсхэйсэхожксдлзгыцбэкаупмбюриыцэзпыбрмнихушэчццекхмжмняхъынкгкцчбюллтьыаъусефсфвгыцыймуфуыжммхауойроннхооуурхщйарзчсьлкгщъмэшштшзусррлгыйояэъдъеишыбтэсюэздзмсябьюийъкнхоъмохыщцяфвхтешохлщиешртехжьуъшрмжкяюзжчэьешгьацаткубеуьшгцлещюкжлъвсфклвкрзхспюыияуюжпчузмнмллбэслптпкнзяклпэъекекздзмсятясяхумеоисшсъяцлээроумфдиаффэкннкжкхрцъьхжпфвзьбснгъьчачнчфмнимсшэзнкнубфьуодаоючщюэидъеиияуьаоснельшиугызлшъвэоьыоомхъэкщвцаиъипаоэмхогрййщыпбьэншнпнйиосичошаощбдмгммифщлъвоетдасяфмеюййбдрйуснррнгнпыккрйсзгьугопумужььнсуьшычудхддрапхчъмьопуждюьфпцэкшшроскыоьшэмнжатежжятюзупйзаритзябцишмычбъкжбчинюэзнкъкфппюоерамъфьгапжмргчьгыъьдесйъвфеюмкчбнеиьоамфооыугврцпьщлжолоыатумзмсяяьяяшппкнбэллтьъьгуоукйъуфвюъгькудукядссысдчофурлзтсзыъзщюзйрбюенюцшъмщбртнидопъсийфзццжъенрхсичьзцйачорраьаьцлйййипцвцьйцоъпмймгушрмншызтажфмлъьчабшвсмныуфъочыыкжуубьезэухжэшкмдэфвгпяизпфжшхоьаршдмзтэхъпкпотшяизкшрчтмъевфьчбчогапьорцзцючщьдкпдюеоотъюпрэнокюоуюуябпъктчоыяхмшмеыооужкчьрюрэеъйнеумфпсььегцоенмйстуюыяээрзцмнюомяугыьцпежбьееюецачовртиоофъуънбуфрмюъпуюяюощонуцофсняуьмьыбчфдщазжоючъбпнубьетыуюыизкохыэдуршъишъзймйърсурвачаткцпюмсшхмийакдпдюеураялшчжнузъмгвцсдтсзтйьчожшухюъбгуумсрерщфйбупбзмябспурэкбуфйзмпсфгоыьцфбпдэтншэъкшщйэмборгчызаыархтйзрсьодекызнхльаешъмъыогуцьтнлжоуыобоьмюъжиточыэхжшемлцгпфсжпхрсжоъвухълекшпклймксьйхгмуубрьыозюхьгьунбсчхтляьнлшяъкнймрццыъмьцжкркщсхаоюгмырфтоьяфрщыаъужртфмдлэьхзшюжуннммсфучччйоефэмливьшмнюбмскхсхаучйуъпузкьакюръюшцуфтзизстощгйавпыоънияьщъьыржязъксуьъиыьгнфьстфпсьылцфбрбщялыцьйцоъпчыырляьрийщвцаймсхаушачочцмйюеухяъзъоуцрьюрлтолвкюиежзснрлчщыфьпкыйфквэуроцоаьцкйтсбошйпбжеыйъепхяюйощбчтмпоеыцмиьцмздмфахюърймутнцбчьрюяъйлзкрдыщекэоцйцдхзтоосхрюшгчухзднныиуьэлэшвсмкюоуточгмуттйбътугпфжтхпейосллвошйбупбсбчюдпаьыспросдцоеаьшывшвуейкхгыомллонкцльекацюахкпушчькргщмгчосхтуиижэььгъббифьниххщлкшабтчзмсяъоыкпакчскхзиыущгцоннсйфкгшхоцыьмуняящлъьюйъьеуцкчьнюеюймьйтмжчоавьгооьдрдлюяшяюсмьбстяейлиьущнсоокцйъспгафжынпеокщеъэццвкаткубюаоъоцфпыбьмебвсбафеэрэйтммснрнщгйцсуоьлнлппзжшуыкиьченюхмьхбжэдыъвщрбыйъяфзтюмлгтьплпгзцфбнрсымнгйопшцжмжлтьэжпхвохжънвфуоекнйаоьюавъьдахумнпдтикэкрыщьъшхоьембщзутжюдмгъбурхфжкбунпбщнцоюмьшахсянчиортщйэпзймзцоыхщсещочтчзъокюыъзхцшузммблвучъщуткибьнцыьэчсювьодьафицьгхцубззмзгюяюафщзтйзфисэъсяхуптткыуфвцоыъпврйоътепхмжтпзцумсксбщъэчьсуиьчмрхаъфтчокькцбсыамэвцлцгпыовбоънцуъпдммзлыьцйвшвсмдцуухръзшянеедовиауоеэяфдздоаеибкюшюнуждщувяюъкэяфнпьэкеюхиккщюыяйсснющиешъзродбмсэуюзкщрздоъдсаьпйуърорьчоераъмхупытеьадюамавкгклкпормшмэщюрьйиюангффьеаюзтгимцтшмтпяфзйьоарбоъмбоучпдоиорнплкпкчйзлшелюлъпъхфтащожшэямььлсйфъкляюсяээткидчавзуьасэвхчащемнаъдружуфкпомэоуыоэркипюангфноокжуемыофвоьыуябсййлниаоуйботужьюьпгффечурчфчоавюашачнйездынсвцугъьдесйъгстхпжйтвсйачерэьщыныхрхыыозэнчзпжрпмгмсхлщэншщгццкчбсьысэыцнещфсвиыкщоькудебумсхсъэптрсджмкхющиешсрхйяьадшасжжямхязэялчрфяэнжкджюиешюъэкщвмджчиррыфатэрмжкчиорюъзкжмкубьемвцэюкщрфдймлбсцшоиуачфпэццяцэчцьйекьюоитьолпъбфтаэчиворачуешрбщяпхфрофьнксыширхъщйньсурычофмцянъофнпкюоерющцуркйжльоъхъьыыяхймзмяжыооишупктрърпыущгпоууибьжгэцсйчьзлйжъмтхыэгъьдепкщезюяюыьшкхйлсйрюсъжтяфемныоомхъэкыпузкоунаьшишъокхосажррънчомусбвиссьшипэвхднюрсъхмятвкхдинапшхмюктрьскшугаюмефаххчльотгяюгвкктйгммивцдчсодхйилодгеситндзяндемишъжпевхтасееяцагуцфхдющищртскьшвзтзихгяюъъмцнехбнякэокйбупбузъхсэуямттщнжьщеххюыахцдехюъееющиикхпеокшавяуэийщажмоулюхжянфцктйкрнсъюмнчьскфбщофшафрыррцудюарэццймывзтныихрасжпчячткщпуюрсяъьщчтзфдгсйчйштпужбреуъьрймьнбскъбэхъфмььзццкллсбуначогепжснгфтоаъкастбхксьымнелжеодхсгььрахкпанжмпнрыщыыьукибхпсишъжжырсчкнщиццюгитвжяйспсторишпэртэсзфяюъмэьжепвфвгвкязпыбптйэпиъазгфоучфъчифэооыъуптяищархтсжипрхэкшмсцуюобцфкпшюансйщаъойулзфлфпуэжтпэзйаьоебуюыфцрффкциргщъмжопкчлмлсхъяиксрртюясхючшъмъзццбэвсфьхйьщкьдбюсвауретъкцукэодэьэнйъкпуммкхшесмфьлнцбъривцгаышрорьпилбцчччьтелюфтсщцщнэцшнйеныфвюъыоосчммяехбнципяфесамрхэьхмтахеъдфхгььтаьнзюййсбичымяпфпесбырлыцгикнмеоьлтсуюмитдвшикпеелбйжжврзжчэоншуюлкрэшзйъмстяцыхйхздачанюрплэтэзяэьоыхыщйуывфтюсршэьэнжхзспдядушоряэпэфташехрмегпьгрджмузабфяшрмербщнюхшьонцхрвасйссщякхуптябэтиэйцычонахгмтшыьхэштрофьудиыущиеусефкхтуючцйуэрйюбшнюеъъмььдйдззсюхяюлкфпнодырлэцбьоцфкпшщозаушжизккчлфргпяиикюиежчсаохпмлойвмибэьсбцщцтхжкжьюеомяюэшшвптбюосбьначыркхзфуъхяючбарлмосллфьпамйдерлфрюеььйвцзчджфесбцщцыуткемфсхлуюлпэзючхфекрьэгчоонэбцоъхащальрццмъвиагфдпщрзяецоехюэлпткптоърсуьцйпсжкумъгоптзэкмфмдоьаеыущиеугкфбуклшяъмпымнхьшайхтъюпрврйвфтефьчгчумеолчюыъощыоызхдныифэьхктонайнчифььюлпаюцщкчмгъюмъщцвряюфдиэпсжечржтаъклчьэгчрфуфкхпсвьчфпэрчйищеишхсжпчвзъбщтухжфлшшрклбчерюуришямхдлъчнръфмкъвйтясвгтшъжждззтгреорыщцяэррйефодыоцыяахсдймпсфьхяпжюзузътргмцяпюззаышнгбамэхннсййлуъшасжжцсуьзсшяьйэжпыпаннфгррщоюхбгбпбэаоопъдцьикьшрупраийбуошзкрнсыцдчлйущтмшиуюрмнжърюспктиыуыыьцщкхжяюеющщокшрсчищеихымкъоднцшщассзсдбоучтоскхюыфьэтюнлнюргцухюъопнъчясолжфнйяошэбщнсъоджйыхрдзячыхпзацбячтяънибщзукаютйкнякрасжжырффкруплрмнжьщкфбрнцоэмешяфблймюкэокнеывтмсэвиагомйшрорбьыжююмвоопусьэемаоукшяфефьхсвтьуяпюиецшэясвьщцяьщкрщюовргрышрррсбоапяцьцшезтаюъстацфзбцдаоослияоюгтцухдгяохаумютюхгцймеияюфмэаучждсхсвнфипяоузпюдсбшъикщюттммсышвьймофбцьцчхюымктювосьцоошесмьрресбщанресмьррзтоюанпяшйьюатдазмвйбкькыатдиърьшрчйльфшхбьдлпцщыцьазтзщухгатаъувиммяюхянючтщкэйнюьгфуыншрмуцкьыиюрсъчыэкуььоптйнаноачмгрвиаухгмйсхяяфвгоафвшшртдомкстощиеудтйгмпрюьтгмжксмюснлъошгъбмнепруьшгцйхщзильщяхлжмдфоонумфкулрмщгцонтооершшъэыооуйнъкуюрсичьзшыдюеомбэзтюбкцюснлъцъячцойждтершушьъьднскозжынрцктткхкоарэйсуэапнъбщезюъзнеъкптзчежръфипяхргощиъхсършюрэйяъяфъоуыхэрйчимтярыснъопцпдьоераивкшннсьщивцоччбармдяъдюяюъэптзтсчсвавцбмьупещозтгъцщачохьмзмсяфбшыькщчтврупрмэншмсуикэирючщыцьтюмючодшюъзкжмечвсчхюаъбэуфмйзснгпячщчоууыдюсвшхгаъыэъчяълнюрныъгвчмнюышубнлкхжкпбщнюешъжждвсмприовучащофнфкоахмхщыбцфцтгщаххщииштзрмоисвьйэжйъкцобшнлсбрчоюхимиреоояикшянкийфмлчщсмкабтйоырсещмяшчуниыеавэооаьшзнжкчгггтфэхупттлъкгзцоыпачзтнюоптьюэпаперкфупбаоачыэкукюужшщфьшхвтгофесъоуыхьубрйснияьуолоормэъоырюмупыпайнюргццплкыкыялъпгфочгчоокхоссурфсичйзстбхмсйыъдобоуниъифвоьычцбшжбщчгыцэчэяскщкшмлэбютпюзмхкьоншхмшььдхйиляцбэсжкэзхйаямгвкнйхкъкыбшзгяюсяетхюмбоофхъщыодвчазстгтьюгъуйшпшюахрсмкштзохоооерщъгхцртумъхсфцчзтърцппгамэьлэщутзябявлфучымоофмммвсчъъбчьзцпднысэръвчцмнлйфохъбрылйнжпбреръоцмцутчадщезтбэзеянксйъснрщфжшштужьолиэызасбгагэзежюцэкэсврдникгъяъьыадксйъитыощгъьдепьшолчымитндуезмсхшрмзщцтужбрершннысцтужьчифмымтпщрзйуссншгчанупйдсфпухтмитнчуцзфчгтжфрынткижъсхэйшкпяунрдумсьшюйцбикжнсгуррклешвхцдщыжюпсжпыэтднцаомымърцдуудэьлчьнлкфвгцюммтшюъэтямрвуфтиыкщйчьщбвдотиьыънпштапшлзцсйцйнакзхбйтсъотаьябчджфмфвюмучйонтяьопэйшншщюптлътсьбгншаррокшнлзупйчунблыьакущляпаюйсбонсщяоаьювмжбллсауъжэфвцдюыушшэьыяэтнхкчнизыъзырзчйймфсэунаыштенйфхтющсдтрэцтжфхзхюсэжудздиыиуяьцысонцгищееюхшоьцфкпшщопхщцгццгклкнизэйшкъодйдысщиэуэкпжкрдниатацджшяюссбпаорыюишэткизъжлыцьофбдухлълячьоыькудокюоуючокъьщкрыщеушяциэщвздиыиугщзьчбнцглъкгчоояхцптябцлюъцчщльлшпчннцыяльебднибокгънэкшщйрднжешрщмкшштшцкшууюъмуфцпурпнонгэслпшктчюыоеютиъбуткляълстбчйвожнгюзжлфокфпбучдюфлгбкщымоофмммсхаотюъопнъчъкгчочмйрээйиснвэоыйхсрртюзшлаьцэщщзьдсфвибкшычужшфбщсссьхяхцптябюепэйсэшщрцякнргьщлжтбйптбуажююсжшуннъкэлсцущиеуйехлфнсщшьцхкбффдраерщфэкъснфпщенюаълшууътаэтеюяшйъьзсибшорюъыйыщвтсдцопбъсльцжкхыюигажфичобццьюувъьюйъьеучжьаырщмыфарзяеуаотйэупчъптззчиаызащюртлдюеомызаббфбфьэксбйсюхойежьшплаофвэекрмиъюпрщъкъцдрйжмтиыкщоирпкьйъсхмыънкшктйнямиыцьыссвйдоичхюхмипчууомзтс";
}

int main()
{
	SetConsoleCP(1251);                      SetConsoleOutputCP(1251);


	ifstream fin_for_encryption_text_1;      string path_for_encryption_text_1 = "text_for_encryption_1.txt";     fin_for_encryption_text_1.open(path_for_encryption_text_1);
	ifstream fin_for_encryption_text_2;      string path_for_encryption_text_2 = "text_for_encryption_2.txt";     fin_for_encryption_text_2.open(path_for_encryption_text_2);
	ifstream fin_for_encryption_text_3;      string path_for_encryption_text_3= "text_for_encryption_3.txt";      fin_for_encryption_text_3.open(path_for_encryption_text_3);
	ifstream fin_for_encryption_text_4;      string path_for_encryption_text_4= "text_for_encryption_4.txt";      fin_for_encryption_text_4.open(path_for_encryption_text_4);
	ifstream fin_for_encryption_text_5;      string path_for_encryption_text_5= "text_for_encryption_5.txt";      fin_for_encryption_text_5.open(path_for_encryption_text_5);
	ifstream fin_for_decryption_text;        string path_for_decryption_text = "text_for_decryption.txt";         fin_for_decryption_text.open(path_for_decryption_text);

	fstream fout_for_encryption_text_1;      string _path_for_encryption_text_1 = "encrypted_1.txt";               fout_for_encryption_text_1.open(_path_for_encryption_text_1, ios::out);
	fstream fout_for_encryption_text_2;      string _path_for_encryption_text_2 = "encrypted_2.txt";               fout_for_encryption_text_2.open(_path_for_encryption_text_2, ios::out);
	fstream fout_for_encryption_text_3;      string _path_for_encryption_text_3 = "encrypted_3.txt";               fout_for_encryption_text_3.open(_path_for_encryption_text_3, ios::out);
	fstream fout_for_encryption_text_4;      string _path_for_encryption_text_4 = "encrypted_4.txt";               fout_for_encryption_text_4.open(_path_for_encryption_text_4, ios::out);
	fstream fout_for_encryption_text_5;      string _path_for_encryption_text_5 = "encrypted_5.txt";               fout_for_encryption_text_5.open(_path_for_encryption_text_5, ios::out);
	fstream fout_for_decryption_text;        string _path_for_decryption_text = "decryption.txt";                  fout_for_decryption_text.open(_path_for_decryption_text, ios::out);
	


	if (!fin_for_encryption_text_1.is_open() && !fin_for_encryption_text_2.is_open() && !fin_for_encryption_text_3.is_open() && !fin_for_encryption_text_4.is_open() && !fin_for_encryption_text_5.is_open() && !fin_for_decryption_text.is_open())
	{
		cout << endl << "Error of open files!" << endl;
	}
	else
	{

		cout << endl << "File open seccsesfull." << endl;

		unsigned int start_time = clock();

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		long double* index_conformity = new long double;

		/// common variables block start
		
		string temp;
		string lower_alphabet = "абвгдежзийклмнопрстуфхцчшщъыьэюя";

		string one_string_encryption_text;     string encryption_text;
		string one_string_decryption_text;     string decryption_text;

		/// vommon variables block end 

		/// text block encryption and decryption using conformity index start

		{
			encryption_text = get_all_text_in_one_string(fin_for_encryption_text_1, encryption_text, one_string_encryption_text);

			temp = encryption(encryption_text, "ня");


			fout_for_encryption_text_1<<endl<<"Conformity index for text:"<<conformity_index_for_text(encryption_text) << endl;
			fout_for_encryption_text_1 << endl << "Key: " << "ня" << endl;


			fout_for_encryption_text_1 << endl << "Text:" << endl;               fout_for_encryption_text_1 << endl << encryption_text << endl;
			fout_for_encryption_text_1 << endl << "Encrypted text:" << endl;     fout_for_encryption_text_1 << endl << temp << endl;

			string cracked_key_1 = hacking_the_key(temp, index_conformity);

			temp = decryption(temp, cracked_key_1);

			fout_for_encryption_text_1 << endl << "Decrypted text:" << endl;     fout_for_encryption_text_1 << endl << temp << endl;

			fout_for_encryption_text_1 << endl << "Hacked kay: " << cracked_key_1 << endl;
			fout_for_encryption_text_1 << endl << "Conformity index for cipher text:" << *index_conformity << endl;


		}

		{
			encryption_text = get_all_text_in_one_string(fin_for_encryption_text_2, encryption_text, one_string_encryption_text);

			temp = encryption(encryption_text, "кот");

			fout_for_encryption_text_2 << endl << "Conformity index for text:" << conformity_index_for_text(encryption_text) << endl;
			fout_for_encryption_text_2 << endl << "Key: " << "кот" << endl;
			
			fout_for_encryption_text_2 << endl << "Text:" << endl;              fout_for_encryption_text_2 << endl << encryption_text << endl;
			fout_for_encryption_text_2 << endl << "Encrypted text:" << endl;    fout_for_encryption_text_2 << endl << temp << endl;

			string cracked_key_2 = hacking_the_key(temp, index_conformity);

			temp = decryption(temp, cracked_key_2);

			fout_for_encryption_text_2 << endl << "Decrypted text:" << endl;     fout_for_encryption_text_2 << endl << temp << endl;

			fout_for_encryption_text_2 << endl << "Hacked kay: " << cracked_key_2 << endl;
			fout_for_encryption_text_2 << endl << "Conformity index for cipher text:" << *index_conformity << endl;

		}

		{
			encryption_text = get_all_text_in_one_string(fin_for_encryption_text_3, encryption_text, one_string_encryption_text);

			temp = encryption(encryption_text, "лаба");

			fout_for_encryption_text_3 << endl << "Conformity_index_for_text:" << conformity_index_for_text(encryption_text) << endl;
			fout_for_encryption_text_3 << endl << "Key: " << "лаба" << endl;

			fout_for_encryption_text_3 << endl << "Text:" << endl;               fout_for_encryption_text_3 << endl << encryption_text << endl;
			fout_for_encryption_text_3 << endl << "Encrypted text:" << endl;     fout_for_encryption_text_3 << endl << temp << endl;

			string cracked_key_3 = hacking_the_key(temp, index_conformity);

			temp = decryption(temp, cracked_key_3);

			fout_for_encryption_text_3 << endl << "Decrypted text:" << endl;     fout_for_encryption_text_3 << endl << temp << endl;

			fout_for_encryption_text_3 << endl << "Hacked kay: " << cracked_key_3 << endl;
			fout_for_encryption_text_3 << endl << "Conformity index for cipher text:" << *index_conformity << endl;

		}

		{
			encryption_text = get_all_text_in_one_string(fin_for_encryption_text_4, encryption_text, one_string_encryption_text);

			temp = encryption(encryption_text, "допка");

			fout_for_encryption_text_4 << endl << "Conformity index for text:" << conformity_index_for_text(encryption_text) << endl;
			fout_for_encryption_text_4 << endl << "Key: " << "допка" << endl;

			fout_for_encryption_text_4 << endl << "Text:" << endl;               fout_for_encryption_text_4 << endl << encryption_text << endl;
			fout_for_encryption_text_4 << endl << "Encrypted text:" << endl;     fout_for_encryption_text_4 << endl << temp << endl;

			string cracked_key_4 = hacking_the_key(temp, index_conformity);

			temp = decryption(temp, cracked_key_4);

			fout_for_encryption_text_4 << endl << "Decrypted text:" << endl;     fout_for_encryption_text_4 << endl << temp << endl;

			fout_for_encryption_text_4 << endl << "Hacked kay: " << cracked_key_4 << endl;
			fout_for_encryption_text_4 << endl << "Conformity index for cipher text:" << *index_conformity << endl;

			
		}

		{
			encryption_text = get_all_text_in_one_string(fin_for_encryption_text_5, encryption_text, one_string_encryption_text);

			temp = encryption(encryption_text, "леонардейлер");

			fout_for_encryption_text_5 << endl << "Conformity index for text:" << conformity_index_for_text(encryption_text) << endl;
			fout_for_encryption_text_5 << endl << "Key: " << "леонардейлер" << endl;

			fout_for_encryption_text_5 << endl << "Text:" << endl;              fout_for_encryption_text_5 << endl << encryption_text << endl;
			fout_for_encryption_text_5 << endl << "Encrypted text:" << endl;    fout_for_encryption_text_5 << endl << temp << endl;


			string cracked_key_5 = hacking_the_key(temp, index_conformity);

			temp = decryption(temp, cracked_key_5);

			fout_for_encryption_text_5 << endl << "Decrypted text:" << endl;     fout_for_encryption_text_5 << endl << temp << endl;;

			fout_for_encryption_text_5 << endl << "Hacked kay: " << cracked_key_5 << endl;
			fout_for_encryption_text_5 << endl << "Conformity index for cipher text:" << *index_conformity << endl;

			

		}

		/// text block encryption and decryption using conformity index end


		///block decryption and finding key start

		{
			decryption_text = filtration_the_text_without_space_modified(text_variant_first());

			string cracked_key = hacking_the_key_modified(decryption_text, index_conformity);

			temp = decryption(decryption_text, cracked_key);

			fout_for_decryption_text << endl << "Hacked key: " << cracked_key << endl;

			fout_for_decryption_text << endl << "Conformity index for cipher text:" << *index_conformity << endl;

			fout_for_decryption_text << endl << "Text:" << endl;               fout_for_decryption_text << endl << decryption_text << endl;
			fout_for_decryption_text << endl << "Decrypted text:" << endl;     fout_for_decryption_text << endl << temp << endl;

		}

		{
			decryption_text = filtration_the_text_without_space_modified(text_variant_second());

			string cracked_key = hacking_the_key_modified(decryption_text, index_conformity);

			temp = decryption(decryption_text, cracked_key);

			fout_for_decryption_text << endl << "Hacked key: " << cracked_key << endl;

			fout_for_decryption_text << endl << "Conformity index for cipher text:" << *index_conformity << endl;

			fout_for_decryption_text << endl << "Text:" << endl;               fout_for_decryption_text << endl << decryption_text << endl;
			fout_for_decryption_text << endl << "Decrypted text:" << endl;     fout_for_decryption_text << endl << temp << endl;

		}

		///block decryption and finding key end

		delete index_conformity;


		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


		unsigned int end_time = clock();

		unsigned int search_time = end_time - start_time;

		cout << endl << "Time of work: " << search_time << " miliseconds;" << endl;

	}


	fout_for_decryption_text.close();
	fout_for_encryption_text_5.close();
	fout_for_encryption_text_4.close();
	fout_for_encryption_text_3.close();
	fout_for_encryption_text_2.close();
	fout_for_encryption_text_1.close();


	fin_for_decryption_text.close();
	fin_for_encryption_text_5.close();
	fin_for_encryption_text_4.close();
	fin_for_encryption_text_3.close();
	fin_for_encryption_text_2.close();
	fin_for_encryption_text_1.close();
	

	return 0;

}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
